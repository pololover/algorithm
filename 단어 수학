#알파벳은 소문자 26개, 대문자 26개
#arr[-1]은 arr배열에서 가장 끝의 원소
#arr[:-1]은 arr배열에서 가장 끝의 원소를 제외한 배열
#ord는 유니코드를 정수로 변환. 
#해당 풀이는 알파벳을 딕셔너리를 다룬 게 아닌 배열로 다뤘기 때문에 직관적으로 알파벳이 몇의 값을 가지는 지 
알기 어려움.
#pow는 지수함수.
n = int(input())
lists = []
for i in range(n):
  lists.append(input())

alphabet = [0 for _ in range(26)]

for arr in lists:
  i = 0
  while arr:
    now = arr[-1]
    alphabet[ord(now)-ord('A')] += pow(10,i)
    i +=1
    arr = arr[:-1]

alphabet.sort(reverse=True)
res = 0
for i in range(9,0,-1):
  res += alphabet[9-i] * i

print(res)


#딕셔너리를 이용한 풀이. 
#결론적으로는 개체형식의 문제일 떄는 딕셔너리를 사용하고, 1000*8 + 10*8 = 1010*8 이 성립하는 것을 아는 것.

n = int(input())

words = []

for _ in range(n):
  words.append(input())

dict = {}

for word in words:
  root = len(word)-1
  for c in word:
    if c in dict:
      dict[c] += pow(10, root)
    else:
      dict[c] = pow(10, root)
    root-=1


dict = sorted(dict.values(), reverse=True) #딕셔너리에서의 값들만 추출.

result, m = 0,9

for value in dict:
  result += value * m
  m -=1

print(result)
  
