import heapq  #전체 돌리는 아이디어로 최소시간먼저 없애기 -> 우선순위 힙

def solution(food_times, k):
    
    if(sum(food_times) <=k):
        return -1
    
    sum_value = 0 #지금까지 걸린 시간
    previous = 0 #전까지 걸린 시간
    
    q = []
    for i in range(len(food_times)):
        heapq.heappush(q, (food_times[i],i+1))  #시간별로 튜플 삽입
    
    length = len(food_times)
    
    while sum_value + (q[0][0] - previous) * length <= k:  #지금까지 걸린 시간 + (현재시간 - 이전시간) * 남은 음식의 개수 <= 지정 시간
        now = heapq.heappop(q)[0] 
        sum_value += (now-previous) * length
        length -= 1
        previous = now
        
    result = sorted(q, key= lambda x:x[1])
    
    return result[(k - sum_value)%length][1]
        
        
