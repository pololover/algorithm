#맞게 푼 거 같은데 시간초과가 나오면 sys.stdin.readline이용.
#앞의 값은 정렬이 된 상태이므로 뒤의 값만 정렬 상태를 보면 되는데 뒤의 값이 순위가
#높아지면 양방향으로 조건에 부합하지만 낮아진다면 양방향 조건이 부합되지 않게 된다.
#즉 모든 경우에 대해서 조건이 부합해야 한다.
import heapq
import sys
tc = int(input())
counts = []
for k in range(tc):
  n = int(input())
  list = []
  for i in range(n):
    a,b = map(int, sys.stdin.readline().split())
    heapq.heappush(list,(a,b))
  
  max_a, max_b = heapq.heappop(list)
  count = 1
  for i in range(1, n):
    a,b = heapq.heappop(list)
    if a > max_a and b > max_b:
      continue
    else:
      max_a = a
      max_b = b
    count +=1
  
  counts.append(count)

for cnt in counts:
  print(cnt)


#보완 코드

import sys
tc = int(input())
counts = []
for k in range(tc):
  n = int(input())
  list = []
  count = 1
  for i in range(n):
    a,b = map(int, sys.stdin.readline().split())
    list.append((a,b))
  list.sort()
  max_b = list[0][1]
  for i in range(1,n):
    if max_b > list[i][1]:
      max_b = list[i][1]
      count +=1
  
  counts.append(count)

for cnt in counts:
  print(cnt)

